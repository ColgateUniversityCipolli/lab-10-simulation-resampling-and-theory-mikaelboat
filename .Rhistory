rbinom
?rbinom
sample <- rbinom(n = samp.size, size = 1, prob = 0.39)
samp.size <- 30
sample <- rbinom(n = samp.size, size = 1, prob = 0.39)
?ggplot
for(i in 1:R) { # R times
poll[i] <- rbinom(n = samp.size, size = 1, prob = 0.39) # random sample
}
sample <- rbinom(n = samp.size, size = 1, prob = 0.39)
R <- 10000
sims <- tibble(poll = rep(1, samp.size))
for(i in 1:R) { # R times
poll[i] <- rbinom(n = samp.size, size = 1, prob = 0.39) # random sample
}
sims[i] <- rbinom(n = samp.size, size = 1, prob = 0.39) # random sample
sims <- tibble(poll = rep(1, samp.size))
for(i in 1:R) { # R times
sims[i] <- rbinom(n = samp.size, size = 1, prob = 0.39) # random sample
}
sims <- tibble(poll = rep(1, samp.size))
for(i in 1:R) { # R times
sims$poll[i] <- rbinom(n = samp.size, size = 1, prob = 0.39) # random sample
}
sims[poll[i]] <- rbinom(n = samp.size, size = 1, prob = 0.39) # random sample
R <- 10000
sims <- tibble(poll = rep(1, samp.size))
#########################################
# LAB 10:
#########################################
# load libraries
##########################################
library(tidyverse)
samp.size <- 30
sample <- rbinom(n = samp.size, size = 1, prob = 0.39)
R <- 10000
sims <- tibble(poll = rep(1, samp.size))
for(i in 1:R) { # R times
sims$poll[i] <- rbinom(n = samp.size, size = 1, prob = 0.39) # random sample
}
View(sims)
View(sims)
samole
sample
count(sample)
mean(sample)
sample <- rbinom(n = samp.size, size = 1, prob = 0.39)
R <- 10000
sims <- tibble(poll = rep(1, samp.size))
for(i in 1:R) { # R times
sims$poll[i] <- mean(rbinom(n = samp.size, size = 1, prob = 0.39)) # random sample
}
rlang::last_trace()
sample <- rbinom(n = samp.size, size = 1, prob = 0.39)
R <- 10000
sims <- tibble(poll = numeric())
for(i in 1:R) { # R times
sims$poll[i] <- mean(rbinom(n = samp.size, size = 1, prob = 0.39)) # random sample
}
View(sims)
View(sims)
R <- 10000
sims <- tibble(poll = numeric(1:R))
sims <- tibble(poll = numeric(R))
for(i in 1:R) { # R times
sims$poll[i] <- mean(rbinom(n = samp.size, size = 1, prob = 0.39)) # random sample
}
View(sims)
View(sims)
hist(sims)
hist(sims$poll)
hist.plot <- ggplot(aes = sims) +
geom_histogram(x = sim$plot, y = after_stat(density))
hist.plot <- ggplot(aes = sims) +
geom_histogram(x = sims$plot, y = after_stat(density))
hist.plot <- ggplot(aes = sims) +
geom_histogram(x = sims$poll, y = after_stat(density))
hist.plot
hist.plot <- ggplot(aes = sims) +
geom_histogram(x = sims$poll, y = after_stat(density))
hist.plot
hist.plot <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density)))
hist.plot
?rnorm
test <- rnorm(n, mean = 0, sd = 1)
test <- rnorm(n, mean = 0, sd = 1)
test <- rnorm(n = samp.size, mean = 0, sd = 1)
hist.plot <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
hist.plot
test <- rnorm(n = samp.size, mean = 0.39, sd = 1)
hist.plot <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
hist.plot
test <- rnorm(n = samp.size, mean = 0.39)
hist.plot <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
hist.plot
test
test <- rnorm(n = samp.size, mean = 0.39, sd = 0.39)
hist.plot <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
hist.plot
hist.plot <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density)))
hist.plot
test <- rnorm(n = samp.size, mean = 0.39, sd = 0.06)
test <- rnorm(n = samp.size, mean = 0.39, sd = 0.06)
test
hist.plot <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
hist.plot
test <- rnorm(n = samp.size, mean = 0.39, sd = 0.05)
hist.plot <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
hist.plot
test <- rnorm(n = samp.size, mean = 0.39, sd = 0.04)
hist.plot <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
hist.plot
hist.plot1 <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
#############
# testing 20000
R <- 20000
sims <- tibble(poll = numeric(R))
for(i in 1:R) { # R times
sims$poll[i] <- mean(rbinom(n = samp.size, size = 1, prob = 0.39)) # random sample
}
test <- rnorm(n = samp.size, mean = 0.39, sd = 0.04)
hist.plot2 <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
hist.plot2
test <- rnorm(n = samp.size, mean = 0.39, sd = 0.02)
hist.plot2 <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
hist.plot2
samp.size <- 1004
sample <- rbinom(n = samp.size, size = 1, prob = 0.39)
R <- 10000
sims <- tibble(poll = numeric(R))
for(i in 1:R) { # R times
sims$poll[i] <- mean(rbinom(n = samp.size, size = 1, prob = 0.39)) # random sample
}
test <- rnorm(n = samp.size, mean = 0.39, sd = 0.04)
hist.plot1 <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = test))
hist.plot1
hist.plot1 <- ggplot(aes = sims) +
geom_histogram(aes(x = sims$poll, y = after_stat(density))) +
geom_density(aes(x = sims$poll))
hist.plot1 <- ggplot(data = sims) +
geom_histogram(aes(x = poll, y = after_stat(density))) +
geom_density(aes(x = poll))
hist.plot1
#############
# testing 20000
R <- 20000
sims <- tibble(poll = numeric(R))
for(i in 1:R) { # R times
sims$poll[i] <- mean(rbinom(n = samp.size, size = 1, prob = 0.39)) # random sample
}
hist.plot2 <- ggplot(data = sims) +
geom_histogram(aes(x = poll, y = after_stat(density))) +
geom_density(aes(x = poll))
hist.plot2
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = c(rep(1,39), rep(0,59)))
View(gallup.data)
View(gallup.data)
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = numeric(1004))
View(gallup.data)
View(gallup.data)
?`rep
adlkfjs\
?`rep,Duration-method
gallup.data$poll <- rep(1, 0.39 * 1004)
View(gallup.data)
View(gallup.data)
?rep()
rep()
?rep()
??repeat
tert
gallup.data |> summarise(poll = rep(1, 0.39 * 1004))
View(gallup.data)
View(gallup.data)
gallup.data <- gallup.data |> summarise(poll = rep(1, 0.39 * 1004))
View(gallup.data)
View(gallup.data)
?rep
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = numeric(1004))
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = numeric(1004))
gallup.data <- gallup.data |> summarise(poll = rep(1, 0.39 * 1004),
sdf
?stat
quit
q
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = numeric(1004))
gallup.data <- gallup.data |> summarise (poll = rep(1, 0.39 * 1004),
poll = rep(0, 0.59 * 1004))
View(gallup.data)
View(gallup.data)
gallup.data <- gallup.data |> mutate(poll = rep(1, 0.39 * 1004))
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = numeric(1:(0.39*1004))
View(gallup.data)
View(gallup.data)
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = c(1:(0.39*1004), 0:(0.59*1004), -1:(0.02*1004)))
View(gallup.data)
View(gallup.data)
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = c(rep(1,(0.39*1004)), rep(0,(0.59*1004)), rep(-1,(0.02*1004)))
View(gallup.data)
View(gallup.data)
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = c(rep(1,(0.39*1004)),
rep(0,(0.59*1004)),
rep(-1,(0.02*1004))))
View(gallup.data)
View(gallup.data)
round()
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = c(rep(1,(0.39*1004)),
rep(0,(0.59*1004)),
rep(-1,(0.02*1004))))
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = c(rep(1,(round(0.39*1004))),
rep(0,(round(0.59*1004))),
rep(-1,(round(0.02*1004)))))
View(gallup.data)
View(gallup.data)
?sample
resample <- sample(x = gallup.data,
size = 1004,
replace = T)
View(resample)
View(resample)
View(gallup.data)
View(gallup.data)
resample <- sample(x = gallup.data$poll,
size = 1004,
replace = T)
resample
#############################
# TASK 2
#############################
gallup.data <- tibble(poll = c(rep(1,(round(0.39*1004))),
rep(0,(round(0.59*1004))),
rep(0,(round(0.02*1004)))))
resample <- sample(x = gallup.data$poll,
size = 1004,
replace = T)
resampel
resample
resample.plot <- ggplot(data = resample) +
geom_histogram(aes(x = poll, y = after_stat(density)))
resample.plot <- ggplot(data = data.frame(resample)) +
geom_histogram(aes(x = data, y = after_stat(density)))
resample.plot
resample.plot <- ggplot(data = data.frame(resample)) +
geom_histogram(aes(x = mean(data), y = after_stat(density)))
resample.plot
data.frame(resample)
?seq
N <- seq(from = 100, to = 300, by = 10)
p <- seq(from = 0.01, to = 0.99, by = 0.01)
P <- seq(from = 0.01, to = 0.99, by = 0.01)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = samp.size, size = 1, prob = 0.39)
rbinom(n = 10000, size = 1004, prob = 0.39)
?rbinom
?quantile
?geom_raster
for (n in N){
for (p in P){
curr.sim <- rbinom(n = 10000, size = n, prob = p)
percentile_2.5 <- quantile(curr.sim, 0.025)
percentile_97.5 <- quantile(curr.sim, 0.975)
num <- (percentile_97.5 - percentile_2.5) / 2
}
}
N <- seq(from = 100, to = 300, by = 10)
P <- seq(from = 0.01, to = 0.99, by = 0.01)
simulations <- tibble(half.of.range = numeric(length(N)))
for (n in N){
for (p in P){
curr.sim <- rbinom(n = 10000, size = n, prob = p)
percentile_2.5 <- quantile(curr.sim, 0.025)
percentile_97.5 <- quantile(curr.sim, 0.975)
num <- (percentile_97.5 - percentile_2.5) / 2
simulations[i] = num
}
}
i = 1
i += 1
simulations <- tibble(half.of.range = numeric(length(N)))
i = 1
for (n in N){
for (p in P){
curr.sim <- rbinom(n = 10000, size = n, prob = p)
percentile_2.5 <- quantile(curr.sim, 0.025)
percentile_97.5 <- quantile(curr.sim, 0.975)
num <- (percentile_97.5 - percentile_2.5) / 2
simulations[i] = num
i = i + 1
}
}
simulations <- tibble(half.of.range = numeric(length(N)))
i = 1
for (n in N){
for (p in P){
curr.sim <- rbinom(n = 10000, size = n, prob = p)
percentile_2.5 <- quantile(curr.sim, 0.025)
percentile_97.5 <- quantile(curr.sim, 0.975)
num <- (percentile_97.5 - percentile_2.5) / 2
simulations$half.of.range[i] = num
i = i + 1
}
}
View(simulations)
View(simulations)
simulations <- tibble(half.of.range = numeric(length(N) * length(P)))
i = 1
for (n in N){
for (p in P){
curr.sim <- rbinom(n = 10000, size = n, prob = p)
percentile_2.5 <- quantile(curr.sim, 0.025)
percentile_97.5 <- quantile(curr.sim, 0.975)
num <- (percentile_97.5 - percentile_2.5) / 2
simulations$half.of.range[i] = num
i = i + 1
}
}
View(simulations)
View(simulations)
geom_raster(half.of.range)
result.p <- ggplot(data = simulations){
result.p <- ggplot(data = simulations) +
geom_raster(half.of.range)
View(simulations)
View(simulations)
result.p <- ggplot(data = simulations) +
geom_raster(aes(x = half.of.range))
result.p <- ggplot(data = simulations) +
geom_raster(aes(x = half.of.range, y = after_stat(density)))
result.p
